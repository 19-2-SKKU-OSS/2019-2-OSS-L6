package Datastructures.Graphs;
/**
 * 크루스칼의 MST(최소 신장 트리) 알고리즘 자바 프로그램
 * 프림의 알고리즘은 있는데, 크루스칼의 알고리즘이 없는 것을 보고 추가함
 * 프림의 알고리즘은 정점을 중심으로 추가하는 반면, 크루스칼 알고리즘은 간선을 중심으로 추가함
 * @author bidulki
 *
 */
public class KruskalMST {
	public static void Kruskal(int[][] graph, int n, int[][] t) {
		int edgeCount = 0;
		int i= 0;
		int v1, v2;
		int s1, s2;
		int[] s = {0,1,2,3,4,5};
		while(edgeCount < n-1) {
			v1 =graph[i][0];
			v2 = graph[i][1];
			s1 = s[v1];
			s2 = s[v2];
			
			if(s1 != s2) {
				for(int j=0; j<s.length; j++) {
					if(s[j]==s2)
						s[j] = s1;
				}
				t[edgeCount][0] = v1;
				t[edgeCount][1] = v2;
				edgeCount++;
			}
			i++;
		}
	}
	
	public static void main(String[] args) {
	
		int[][] graph = {{3,4}, {2,3}, {2,4}, {0,1}, {0,2}, {1,2}, {0,5},
				{0,4}, {4,5}};
		int[][] t = new int[5][2];
		Kruskal(graph,6,t);
		for(int i=0; i< t.length; i++) {
			System.out.println(t[i][0]+1+" "+ (t[i][1]+1));
		}
		
	}
	
